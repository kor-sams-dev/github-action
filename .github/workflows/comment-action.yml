name: Pull request comment

on:
  issue_comment:
    types: [created]

jobs:
  pull_request_comment:
    if: contains(github.event.comment.html_url, '/pull/')
    runs-on: ubuntu-latest
    steps:
      - name: Mearge staging
        if: contains(github.event.comment.body, '/qa')
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            # 현재 Pull Request에 대한 정보 불러오기
            const issue = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            if(!issue.data.head.ref.includes('feature')) return

            # staging 브랜치로 현재 PR의 feature 브랜치를 병합
            await github.rest.repos.merge({
              owner: context.repo.owner,
              repo: context.repo.repo ,
              base: 'staging',
              head: issue.data.head.ref
            });

            try{
              # During QA 라벨이 있는지 확인
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'During QA'
              });
            } catch(e) {
              # 없으면 에러가 발생함 
              # During QA 라벨 생성
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'During QA',
                color: 'ff0000'
              });
            }

            # During QA 라벨을 현재 PR에 추가
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['During QA']
            });

            # staging 브랜치에 병합 완료 메시지 남기기
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'staging에 병합 완⭐️료'
            })

      - name: Merge Pull Request
        if: contains(github.event.comment.body, '/mg')
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            # During QA 라벨을 삭제
            await github.rest.issues.deleteLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'During QA'
            });
